### YamlMime:ManagedReference
items:
- uid: ClassLibrary.AllModels
  commentId: T:ClassLibrary.AllModels
  id: AllModels
  parent: ClassLibrary
  children:
  - ClassLibrary.AllModels.EventSummaries
  - ClassLibrary.AllModels.ticketEvent
  - ClassLibrary.AllModels.ticketEventDate
  - ClassLibrary.AllModels.value
  - ClassLibrary.AllModels.venue
  langs:
  - csharp
  - vb
  name: AllModels
  nameWithType: AllModels
  fullName: ClassLibrary.AllModels
  type: Class
  source:
    remote:
      path: src/ClassLibrary/AllModels.cs
      branch: master
      repo: https://github.com/agngus/ticketSystem-jam.git
    id: AllModels
    path: src/ClassLibrary/AllModels.cs
    startLine: 7
  assemblies:
  - ClassLibrary
  namespace: ClassLibrary
  syntax:
    content: public class AllModels
    content.vb: Public Class AllModels
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ClassLibrary.AllModels.ticketEventDate
  commentId: F:ClassLibrary.AllModels.ticketEventDate
  id: ticketEventDate
  parent: ClassLibrary.AllModels
  langs:
  - csharp
  - vb
  name: ticketEventDate
  nameWithType: AllModels.ticketEventDate
  fullName: ClassLibrary.AllModels.ticketEventDate
  type: Field
  source:
    remote:
      path: src/ClassLibrary/AllModels.cs
      branch: master
      repo: https://github.com/agngus/ticketSystem-jam.git
    id: ticketEventDate
    path: src/ClassLibrary/AllModels.cs
    startLine: 9
  assemblies:
  - ClassLibrary
  namespace: ClassLibrary
  syntax:
    content: public TicketEventDate ticketEventDate
    return:
      type: ClassLibrary.TicketEventDate
    content.vb: Public ticketEventDate As TicketEventDate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ClassLibrary.AllModels.ticketEvent
  commentId: F:ClassLibrary.AllModels.ticketEvent
  id: ticketEvent
  parent: ClassLibrary.AllModels
  langs:
  - csharp
  - vb
  name: ticketEvent
  nameWithType: AllModels.ticketEvent
  fullName: ClassLibrary.AllModels.ticketEvent
  type: Field
  source:
    remote:
      path: src/ClassLibrary/AllModels.cs
      branch: master
      repo: https://github.com/agngus/ticketSystem-jam.git
    id: ticketEvent
    path: src/ClassLibrary/AllModels.cs
    startLine: 10
  assemblies:
  - ClassLibrary
  namespace: ClassLibrary
  syntax:
    content: public TicketEvent ticketEvent
    return:
      type: ClassLibrary.TicketEvent
    content.vb: Public ticketEvent As TicketEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ClassLibrary.AllModels.value
  commentId: F:ClassLibrary.AllModels.value
  id: value
  parent: ClassLibrary.AllModels
  langs:
  - csharp
  - vb
  name: value
  nameWithType: AllModels.value
  fullName: ClassLibrary.AllModels.value
  type: Field
  source:
    remote:
      path: src/ClassLibrary/AllModels.cs
      branch: master
      repo: https://github.com/agngus/ticketSystem-jam.git
    id: value
    path: src/ClassLibrary/AllModels.cs
    startLine: 11
  assemblies:
  - ClassLibrary
  namespace: ClassLibrary
  syntax:
    content: public Value value
    return:
      type: ClassLibrary.Value
    content.vb: Public value As Value
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ClassLibrary.AllModels.venue
  commentId: F:ClassLibrary.AllModels.venue
  id: venue
  parent: ClassLibrary.AllModels
  langs:
  - csharp
  - vb
  name: venue
  nameWithType: AllModels.venue
  fullName: ClassLibrary.AllModels.venue
  type: Field
  source:
    remote:
      path: src/ClassLibrary/AllModels.cs
      branch: master
      repo: https://github.com/agngus/ticketSystem-jam.git
    id: venue
    path: src/ClassLibrary/AllModels.cs
    startLine: 12
  assemblies:
  - ClassLibrary
  namespace: ClassLibrary
  syntax:
    content: public Venue venue
    return:
      type: ClassLibrary.Venue
    content.vb: Public venue As Venue
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ClassLibrary.AllModels.EventSummaries
  commentId: F:ClassLibrary.AllModels.EventSummaries
  id: EventSummaries
  parent: ClassLibrary.AllModels
  langs:
  - csharp
  - vb
  name: EventSummaries
  nameWithType: AllModels.EventSummaries
  fullName: ClassLibrary.AllModels.EventSummaries
  type: Field
  source:
    remote:
      path: src/ClassLibrary/AllModels.cs
      branch: master
      repo: https://github.com/agngus/ticketSystem-jam.git
    id: EventSummaries
    path: src/ClassLibrary/AllModels.cs
    startLine: 14
  assemblies:
  - ClassLibrary
  namespace: ClassLibrary
  syntax:
    content: public List<EventSummary> EventSummaries
    return:
      type: System.Collections.Generic.List{ClassLibrary.EventSummary}
    content.vb: Public EventSummaries As List(Of EventSummary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: ClassLibrary
  commentId: N:ClassLibrary
  isExternal: false
  name: ClassLibrary
  nameWithType: ClassLibrary
  fullName: ClassLibrary
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: ClassLibrary.TicketEventDate
  commentId: T:ClassLibrary.TicketEventDate
  parent: ClassLibrary
  isExternal: false
  name: TicketEventDate
  nameWithType: TicketEventDate
  fullName: ClassLibrary.TicketEventDate
- uid: ClassLibrary.TicketEvent
  commentId: T:ClassLibrary.TicketEvent
  parent: ClassLibrary
  isExternal: false
  name: TicketEvent
  nameWithType: TicketEvent
  fullName: ClassLibrary.TicketEvent
- uid: ClassLibrary.Value
  commentId: T:ClassLibrary.Value
  parent: ClassLibrary
  isExternal: false
  name: Value
  nameWithType: Value
  fullName: ClassLibrary.Value
- uid: ClassLibrary.Venue
  commentId: T:ClassLibrary.Venue
  parent: ClassLibrary
  isExternal: false
  name: Venue
  nameWithType: Venue
  fullName: ClassLibrary.Venue
- uid: System.Collections.Generic.List{ClassLibrary.EventSummary}
  commentId: T:System.Collections.Generic.List{ClassLibrary.EventSummary}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<EventSummary>
  nameWithType: List<EventSummary>
  fullName: System.Collections.Generic.List<ClassLibrary.EventSummary>
  nameWithType.vb: List(Of EventSummary)
  fullName.vb: System.Collections.Generic.List(Of ClassLibrary.EventSummary)
  name.vb: List(Of EventSummary)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ClassLibrary.EventSummary
    name: EventSummary
    nameWithType: EventSummary
    fullName: ClassLibrary.EventSummary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ClassLibrary.EventSummary
    name: EventSummary
    nameWithType: EventSummary
    fullName: ClassLibrary.EventSummary
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
